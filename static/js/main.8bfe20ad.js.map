{"version":3,"file":"static/js/main.8bfe20ad.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../external commonjs \"react\"","../external commonjs \"react-dom/client\"","../external commonjs \"react/jsx-runtime\"","App.jsx","index.jsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-dom/client\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","import React from \"react\";\n\nfunction Data() {\n  const [user, setUser] = React.useState([]);\n  const [enrollment, setEnrollment] = React.useState([]);\n\n  const [courses, setCourses] = React.useState([]);\n  const [courseVisibility, setCourseVisibility] = React.useState([]);\n  const [courseModules, setCourseModules] = React.useState([]);\n  const [removedCourses, setRemovedCourses] = React.useState(() => {\n    const prevArr = localStorage.getItem(\"removedCourses\");\n    return prevArr ? JSON.parse(prevArr) : [];\n  });\n\n  const [assignments, setAssignments] = React.useState([]);\n  const [sortedToDo, setSortedToDo] = React.useState([]);\n  const [unsortedToDo, setUnsortedToDo] = React.useState(() => {\n    const prevArr = localStorage.getItem(\"unsortedToDo\");\n    return prevArr ? JSON.parse(prevArr) : [];\n  });\n  const [addedToDo, setAddedToDo] = React.useState(() => {\n    const prevArr = localStorage.getItem(\"addedToDo\");\n    return prevArr ? JSON.parse(prevArr) : [];\n  });\n  const [completedAssignments, setCompletedAssignments] = React.useState(() => {\n    const prevArr = localStorage.getItem(\"completedAssignments\");\n    return prevArr ? JSON.parse(prevArr) : [];\n  });\n\n  const [submissions, setSubmissions] = React.useState([]);\n  const [items, setItems] = React.useState([]);\n  const [itemVisibility, setItemVisibility] = React.useState([]);\n\n  const [selectedDate, setSelectedDate] = React.useState(\"\");\n  const [toDoExtent, setToDoExtent] = React.useState(() => {\n    const prevExtent = localStorage.getItem(\"toDoExtent\");\n    return prevExtent !== null ? prevExtent : \"7\";\n  });\n\n  const [key, setKey] = React.useState(() => {\n    // either null or string representation of key\n    const key = JSON.parse(localStorage.getItem(\"key\"));\n    return key;\n  });\n  const [validKey, setValidKey] = React.useState(() => {\n    const validKey = JSON.parse(localStorage.getItem(\"validKey\"));\n    if (validKey == null) return false;\n    return validKey;\n  });\n\n  const [showCourseName, setShowCourseName] = React.useState(true);\n\n  React.useEffect(() => {\n    if (validKey)\n      try {\n        // get user information (name, id, etc.)\n        fetch(`https://canvastodobackend.onrender.com/api/users/self/${key}`)\n          .then((response) => response.json())\n          .then((userData) => {\n            setUser(userData);\n\n            // get total course grades\n            fetch(\n              `https://canvastodobackend.onrender.com/api/users/${userData.id}/enrollments/${key}`\n            )\n              .then((response) => response.json())\n              .then((enrollmentData) => {\n                setEnrollment(enrollmentData);\n              });\n          });\n\n        // get user courses\n        fetch(`https://canvastodobackend.onrender.com/api/courses/${key}`)\n          .then((response) => response.json())\n          .then((coursesData) => {\n            // filter out invalid courses\n            let courses = [];\n\n            coursesData = coursesData.filter((course) => {\n              const courseCRN =\n                course.name.split(\"(\").splice(-1, 1)[0].split(\"_\")[0] +\n                course.name.split(\"(\").splice(-1, 1)[0].split(\"_\")[1];\n              if (!courseCRN.includes(\"undefined\")) {\n                courses.push(false);\n                return course;\n              }\n            });\n\n            setCourses(coursesData);\n            setCourseVisibility(courses);\n\n            let modulesPromise = [];\n            let assignmentsPromise = [];\n\n            for (const course of coursesData) {\n              modulesPromise.push(\n                fetch(\n                  `https://canvastodobackend.onrender.com/api/courses/${course.id}/modules/${key}`\n                ).then((response) => response.json())\n              );\n\n              assignmentsPromise.push(\n                fetch(\n                  `https://canvastodobackend.onrender.com/api/courses/${course.id}/assignments/${key}`\n                ).then((response) => response.json())\n              );\n            }\n\n            Promise.all(modulesPromise)\n              .then((modulesData) => {\n                setCourseModules(modulesData);\n\n                let visibility = [];\n                let moduleItemsPromise = [];\n                // iterate over modules data to fetch items for each module\n                // for each array of modules\n                modulesData.forEach((modules, courseIndex) => {\n                  // if that array is indeed an array\n                  if (Array.isArray(modules)) {\n                    let moduleVisibility = [];\n\n                    // for each module, get its items\n                    let itemsPromises = modules.map((module) => {\n                      const regex = /courses\\/(\\d+)\\/modules\\/(\\d+)\\/items/;\n                      const [call, courseId, moduleId] =\n                        module.items_url.match(regex);\n                      return fetch(\n                        `https://canvastodobackend.onrender.com/api/courses/${courseId}/modules/${moduleId}/items/${key}`\n                      ).then((response) => response.json());\n                    });\n\n                    for (let i = 0; i < itemsPromises.length; i++) {\n                      moduleVisibility.push(false);\n                    }\n\n                    visibility.push(moduleVisibility);\n                    moduleItemsPromise.push(Promise.all(itemsPromises));\n                  } else {\n                    visibility.push(false);\n                    moduleItemsPromise.push(false);\n                  }\n                });\n\n                // after all items are fetched, update the state with the collected data\n                Promise.all(moduleItemsPromise)\n                  .then((moduleItems) => {\n                    setItems(moduleItems);\n                    setItemVisibility(visibility);\n                  })\n                  .catch((error) => {\n                    console.log(\"Error fetching module items:\", error);\n                  });\n              })\n              .catch((error) => {\n                console.log(\"Error fetching course modules:\", error);\n              });\n\n            Promise.all(assignmentsPromise)\n              .then((assignmentsData) => {\n                setAssignments(assignmentsData);\n\n                // if unsortedToDo is already defined, do not wait for loaded submissions to call function\n                // if (unsortedToDo.length > 0)\n                // populateSortedToDo(assignmentsData, []);\n\n                let submissionsPromise = [];\n\n                // for each assignment\n                assignmentsData.forEach((course) => {\n                  if (Array.isArray(course)) {\n                    let submissions = [];\n\n                    course.forEach((assignment) => {\n                      const regex = /courses\\/(\\d+)\\/assignments\\/(\\d+)/;\n                      const [call, courseId, assignmentId] =\n                        assignment.html_url.match(regex);\n\n                      submissions.push(\n                        fetch(\n                          `https://canvastodobackend.onrender.com/api/courses/${courseId}/assignments/${assignmentId}/submissions/self/${key}`\n                        ).then((response) => response.json())\n                      );\n                    });\n\n                    submissionsPromise.push(Promise.all(submissions));\n                  } else {\n                    submissionsPromise.push(false);\n                  }\n                });\n\n                Promise.all(submissionsPromise)\n                  .then((submissionsData) => {\n                    setSubmissions(submissionsData);\n                    populateSortedToDo(assignmentsData, submissionsData);\n                  })\n                  .catch((error) => {\n                    console.log(\"Error fetching submissions:\", error);\n                  });\n              })\n              .catch((error) => {\n                console.log(\"Error fetching assignments:\", error);\n              });\n          });\n      } catch (error) {\n        console.log(error);\n      }\n  }, [validKey]);\n\n  function getCourseGrade(courseId) {\n    for (let i = 0; i < enrollment.length; i++) {\n      if (courseId == enrollment[i].course_id) {\n        return enrollment[i].grades.current_score;\n      }\n    }\n  }\n\n  function getAssignment(courseIndex, item) {\n    const assignmentsArray = assignments[courseIndex];\n\n    for (let i = 0; i < assignmentsArray.length; i++) {\n      if (assignmentsArray[i].name === item.title) {\n        return { assignment: assignmentsArray[i], index: i };\n      }\n    }\n    return null;\n  }\n\n  function populateSortedToDo(assignmentsData, submissionsData) {\n    let newArr = [];\n\n    for (let i = 0; i < assignmentsData.length; i++) {\n      if (Array.isArray(assignmentsData[i])) {\n        for (let j = 0; j < assignmentsData[i].length; j++) {\n          // default 0 for deleted\n          // index, assignObj, courseIndex, assignIndex, deletedBool, unsorted/added, progress bar, submissionObj\n          newArr.push([\n            newArr.length,\n            assignmentsData[i][j],\n            i,\n            j,\n            0,\n            1,\n            0,\n            submissionsData[i][j],\n          ]);\n        }\n      }\n    }\n\n    setUnsortedToDo(newArr);\n\n    localStorage.setItem(\"unsortedToDo\", JSON.stringify(newArr));\n\n    setSortedToDo(() => {\n      const sortedArr = newArr.concat(addedToDo);\n\n      sortedArr.sort((a, b) => {\n        const dateA = new Date(a[1].due_at).getTime();\n        const dateB = new Date(b[1].due_at).getTime();\n        return dateA - dateB;\n      });\n\n      return sortedArr;\n    });\n  }\n\n  // toggle visibilty of course items\n  function toggleCourseVisibility(courseIndex) {\n    if (courseVisibility.length > 0) {\n      const updatedVisibility = [...courseVisibility];\n      updatedVisibility[courseIndex] = !updatedVisibility[courseIndex];\n      setCourseVisibility(updatedVisibility);\n    }\n  }\n\n  // toggle visibility of module items\n  function toggleItemVisibility(courseIndex, moduleIndex) {\n    if (itemVisibility.length > 0) {\n      const updatedVisibility = [...itemVisibility];\n      updatedVisibility[courseIndex][moduleIndex] =\n        !updatedVisibility[courseIndex][moduleIndex];\n      setItemVisibility(updatedVisibility);\n    }\n  }\n\n  function formatDate(date) {\n    if (date) {\n      const dateObject = new Date(date);\n\n      const day = dateObject.getUTCDate();\n      const month = dateObject.getUTCMonth() + 1;\n      const year = dateObject.getUTCFullYear();\n\n      const formattedDay = day < 10 ? \"0\" + day : day;\n      const formattedMonth = month < 10 ? \"0\" + month : month;\n\n      return `${formattedDay}/${formattedMonth}/${year}`;\n    } else {\n      return null;\n    }\n  }\n\n  function getNumDays(dueDate) {\n    if (!dueDate) return null;\n\n    const oneDay = 24 * 60 * 60 * 1000;\n    const parts = dueDate.split(\"/\");\n    const formattedDate = new Date(parts[2], parts[1] - 1, parts[0]);\n\n    // normalize dates to midnight to avoid issues with time of day\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    formattedDate.setHours(0, 0, 0, 0);\n\n    const diffDays = Math.round((formattedDate - today) / oneDay);\n\n    if (diffDays == 0) {\n      return [\"Today\", diffDays];\n    } else if (diffDays == 1) {\n      return [\"Tomorrow\", diffDays];\n    } else {\n      const month = formattedDate.toLocaleDateString(undefined, {\n        month: \"short\",\n      });\n      const day = formattedDate.getDate();\n      return [`${month} ${day}`, diffDays];\n    }\n  }\n\n  function truncateString(str, maxLength) {\n    if (str.length <= maxLength) return str;\n\n    // find the last space within the maxLength\n    const lastSpaceIndex = str.lastIndexOf(\" \", maxLength);\n    if (lastSpaceIndex === -1) return str.substring(0, maxLength);\n\n    // truncate at the last space found\n    return str.substring(0, lastSpaceIndex);\n  }\n\n  const addableCourses = removedCourses.map((course, index) => {\n    return (\n      <div key={index} className=\"courseModal-item\">\n        <div style={{ textTransform: \"capitalize\" }}>\n          {`${\n            course[0].split(\"(\").splice(-1, 1)[0].split(\"_\")[0] +\n            course[0].split(\"(\").splice(-1, 1)[0].split(\"_\")[1]\n          } -\n            ${course[0].split(\" (\").splice(0, 1)[0].toLowerCase()}`}\n        </div>\n        <button\n          className=\"courseModal-item-btn\"\n          onClick={() => {\n            setRemovedCourses((prevArr) => {\n              const newArr = [...prevArr];\n              newArr.splice(index, 1);\n              localStorage.setItem(\"removedCourses\", JSON.stringify(newArr));\n              return newArr;\n            });\n          }}\n        >\n          +\n        </button>\n      </div>\n    );\n  });\n\n  const courseTitles = courses ? (\n    courses.map((course, index) => {\n      const courseName = course.name.split(\" (\").splice(0, 1)[0].toLowerCase();\n      const courseCRN =\n        course.name.split(\"(\").splice(-1, 1)[0].split(\"_\")[0] +\n        course.name.split(\"(\").splice(-1, 1)[0].split(\"_\")[1];\n\n      const removedCourseNames = removedCourses.map((item) => item[0]);\n\n      return !removedCourseNames.includes(course.name) ? (\n        <div key={index}>\n          <div className=\"course\">\n            {showCourseName ? (\n              <div className=\"course-name\">{courseName}</div>\n            ) : (\n              <div></div>\n            )}\n            <div className=\"course-crn\">{courseCRN}</div>\n            <div\n              className=\"course-delete\"\n              onClick={() => {\n                setRemovedCourses((prevArr) => {\n                  const newArr = [...prevArr];\n                  newArr.push([course.name, course]);\n                  localStorage.setItem(\n                    \"removedCourses\",\n                    JSON.stringify(newArr)\n                  );\n                  return newArr;\n                });\n              }}\n            >\n              x\n            </div>\n          </div>\n          <hr\n            className=\"horizontal-line\"\n            style={{\n              border: \"1px solid #eee\",\n              borderRadius: \"5px\",\n              margin: \"5px 0px\",\n            }}\n          ></hr>\n        </div>\n      ) : (\n        <div key={index}></div>\n      );\n    })\n  ) : (\n    <div>Courses Loading...</div>\n  );\n\n  // modules section\n  const allModules =\n    courseModules && courseModules.length > 0 ? (\n      courseModules.map((modules, courseIndex) => {\n        const courseVisible = courseVisibility\n          ? courseVisibility[courseIndex]\n          : false;\n\n        const removedCourseNames = removedCourses.map((item) => item[0]);\n\n        return !removedCourseNames.includes(courses[courseIndex].name) ? (\n          <div key={courseIndex}>\n            {courseIndex === 0 ? <hr></hr> : \"\"}\n            <div\n              className=\"course-header\"\n              onClick={\n                Array.isArray(modules)\n                  ? () => toggleCourseVisibility(courseIndex)\n                  : undefined\n              }\n            >\n              <div className=\"course-title\">\n                {\n                  courseTitles[courseIndex].props.children[0].props.children[1]\n                    .props.children\n                }\n              </div>\n              <div className=\"course-grade\">\n                Grade: {getCourseGrade(courses[courseIndex].id)}\n              </div>\n              <span className={\"course-arrow\"}>\n                {Array.isArray(modules)\n                  ? courseVisibility\n                    ? courseVisibility[courseIndex]\n                      ? \"▲\"\n                      : \"▼\"\n                    : \"\"\n                  : \"\"}\n              </span>\n            </div>\n\n            {courseVisible ? (\n              Array.isArray(modules) ? (\n                modules.map((module, moduleIndex) => {\n                  const itemVisible = itemVisibility[courseIndex]\n                    ? itemVisibility[courseIndex][moduleIndex]\n                      ? itemVisibility[courseIndex][moduleIndex]\n                      : false\n                    : false;\n                  return (\n                    <div key={moduleIndex}>\n                      <div\n                        className=\"module\"\n                        onClick={() =>\n                          toggleItemVisibility(courseIndex, moduleIndex)\n                        }\n                      >\n                        <div className=\"module-header\">\n                          <div className=\"module-name\">{module.name}</div>\n                          <span className={\"module-arrow\"}>\n                            {itemVisible ? \"▲\" : \"▼\"}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"module-items\">\n                        {itemVisible &&\n                        items[courseIndex][moduleIndex].length > 0 ? (\n                          items[courseIndex][moduleIndex].map(\n                            (item, itemIndex) => {\n                              const assignObj = getAssignment(\n                                courseIndex,\n                                item\n                              );\n                              const formattedDate = assignObj\n                                ? formatDate(assignObj.assignment.due_at)\n                                : null;\n                              const [dueDate, daysUntil] = formattedDate\n                                ? getNumDays(formattedDate)\n                                : [null, null];\n                              const itemTitle = truncateString(item.title, 30);\n                              const submissionValid =\n                                assignObj &&\n                                submissions[courseIndex] &&\n                                submissions[courseIndex][assignObj.index]\n                                  ? true\n                                  : false;\n\n                              return (\n                                <div key={itemIndex} className=\"module-item\">\n                                  {/*<div style={{ width: \"90px\" }}>\n                                    {item.type}\n                                  </div>*/}\n                                  <div style={{ width: \"220px\" }}>\n                                    {itemTitle}\n                                  </div>\n                                  <div\n                                    className=\"module-item-attributes\"\n                                    style={{ width: \"75px\" }}\n                                  >\n                                    <div\n                                      style={{\n                                        width: \"55px\",\n                                        textAlign: \"start\",\n                                      }}\n                                    >\n                                      {submissionValid &&\n                                      submissions[courseIndex][assignObj.index]\n                                        .grade\n                                        ? `${parseFloat(\n                                            parseFloat(\n                                              submissions[courseIndex][\n                                                assignObj.index\n                                              ].grade\n                                            ).toFixed(2)\n                                          )}/${\n                                            assignObj.assignment.points_possible\n                                          }`\n                                        : \"\"}\n                                    </div>\n                                    <div\n                                      className={`${\n                                        daysUntil <= 0 ? \"past-due\" : \"\"\n                                      } ${daysUntil > 0 ? \"due\" : \"\"}`}\n                                    >\n                                      {submissionValid\n                                        ? submissions[courseIndex][\n                                            assignObj.index\n                                          ].workflow_state === \"graded\"\n                                          ? \"🟩\"\n                                          : submissions[courseIndex][\n                                              assignObj.index\n                                            ].workflow_state === \"submitted\"\n                                          ? dueDate\n                                            ? `${dueDate}`\n                                            : \"🟨\"\n                                          : \"\"\n                                        : \"\"}\n                                    </div>\n                                  </div>\n                                </div>\n                              );\n                            }\n                          )\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })\n              ) : (\n                <div>Course has no modules</div>\n              )\n            ) : (\n              <div></div>\n            )}\n            <hr></hr>\n          </div>\n        ) : (\n          <div key={courseIndex}></div>\n        );\n      })\n    ) : (\n      <div>Modules Loading...</div>\n    );\n\n  const toDoCurrent =\n    sortedToDo.length > 0 ? (\n      sortedToDo.map((element, curAssignIndex) => {\n        const [\n          index,\n          assignment,\n          courseIndex,\n          assignIndex,\n          visible,\n          arrayType,\n          progress,\n          submission,\n        ] = element;\n\n        const formattedDate = assignment ? formatDate(assignment.due_at) : null;\n        const [dueDate, daysUntil] = formattedDate\n          ? getNumDays(formattedDate)\n          : [null, null];\n\n        const name = assignment\n          ? truncateString(assignment.name, 20)\n          : assignment.name;\n\n        const removedCourseNames = removedCourses.map((item) => item[0]);\n\n        const validWorkflows = [\"graded\", \"submitted\"];\n\n        // while assignment is not submitted, not graded, visible, course hasn't been removed, and toDo extent met\n        return !validWorkflows.includes(submission.workflow_state) &&\n          visible == 0 &&\n          (courseIndex === \"userAdded\" ||\n            !removedCourseNames.includes(courses[courseIndex].name)) &&\n          daysUntil < toDoExtent ? (\n          <div key={curAssignIndex}>\n            <div className=\"toDo-item\">\n              <div className=\"toDo-item-title\">\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => {\n                      setCompletedAssignments((prevArr) => {\n                        let newArr = [\n                          [\n                            assignment,\n                            curAssignIndex,\n                            index,\n                            courseIndex,\n                            arrayType,\n                          ],\n                          ...prevArr,\n                        ];\n\n                        if (newArr.length > 5) newArr.pop();\n\n                        localStorage.setItem(\n                          \"completedAssignments\",\n                          JSON.stringify(newArr)\n                        );\n\n                        return newArr;\n                      });\n                      setSortedToDo((prevArr) => {\n                        // change assignment in unsorted/added arr to not visible\n                        if (arrayType == 1)\n                          setUnsortedToDo((prevArr) => {\n                            const newArr = [...prevArr];\n                            newArr[index][4] = 1;\n                            localStorage.setItem(\n                              \"unsortedToDo\",\n                              JSON.stringify(newArr)\n                            );\n                            return newArr;\n                          });\n                        else\n                          setAddedToDo((prevArr) => {\n                            const newArr = [...prevArr];\n                            newArr[index][4] = 1;\n                            localStorage.setItem(\n                              \"addedToDo\",\n                              JSON.stringify(newArr)\n                            );\n                            return newArr;\n                          });\n\n                        // change assignment in sorted arr to not visible\n                        const newArr = [...prevArr];\n                        newArr[curAssignIndex][4] = 1;\n                        return newArr;\n                      });\n                    }}\n                  ></input>\n                </label>\n                <div>\n                  {courseIndex && courseTitles[courseIndex]\n                    ? `${courseTitles[courseIndex].props.children[0].props.children[1].props.children} - `\n                    : \"\"}\n                  {name}\n                </div>\n              </div>\n              <div\n                className={`${daysUntil < 0 ? \"past-due\" : \"\"} ${\n                  daysUntil == 0 || daysUntil == 1 ? \"due\" : \"\"\n                }`}\n              >\n                {dueDate}\n              </div>\n            </div>\n            <div className=\"toDo-item-slider\">\n              <input\n                className=\"toDo-item-slider-input\"\n                type=\"range\"\n                min=\"0\"\n                max=\"10\"\n                value={progress}\n                onChange={(event) => {\n                  setSortedToDo((prevArr) => {\n                    if (arrayType == 1)\n                      setUnsortedToDo((prevArr) => {\n                        const newArr = [...prevArr];\n                        newArr[index][6] = event.target.value;\n                        localStorage.setItem(\n                          \"unsortedToDo\",\n                          JSON.stringify(newArr)\n                        );\n                        return newArr;\n                      });\n                    else\n                      setAddedToDo((prevArr) => {\n                        const newArr = [...prevArr];\n                        newArr[index][6] = event.target.value;\n                        localStorage.setItem(\n                          \"addedToDo\",\n                          JSON.stringify(newArr)\n                        );\n                        return newArr;\n                      });\n                    const newArr = [...prevArr];\n                    newArr[curAssignIndex][6] = event.target.value;\n                    return newArr;\n                  });\n                }}\n                style={{\n                  background: (() => {\n                    const percentage = ((progress - 0) / (10 - 0)) * 100;\n                    return `linear-gradient(to right, #4CAF50 0%, #4CAF50 ${percentage}%, #d3d3d3 ${percentage}%, #d3d3d3 100%)`;\n                  })(),\n                }}\n              ></input>\n              <span\n                className=\"toDo-item-slider-span\"\n                style={{\n                  left: `calc(${((progress - 0) / (10 - 0)) * 100}% - 10px)`,\n                }}\n              >\n                {((progress - 0) / (10 - 0)) * 100}%\n              </span>\n            </div>\n          </div>\n        ) : (\n          <div key={curAssignIndex}></div>\n        );\n      })\n    ) : (\n      <div>Assignments Loading...</div>\n    );\n\n  const toDoCompleted =\n    toDoCurrent.length > 0 ? (\n      completedAssignments.map((element, compAssignIndex) => {\n        const [assignment, curAssignIndex, index, courseIndex, arrayType] =\n          element;\n\n        const formattedDate = assignment ? formatDate(assignment.due_at) : null;\n        const [dueDate, daysUntil] = formattedDate\n          ? getNumDays(formattedDate)\n          : [null, null];\n\n        const name =\n          assignment.name.length > 50\n            ? truncateString(\n                assignment.name,\n                Math.round(window.screen.width / 25)\n              )\n            : assignment.name;\n\n        return (\n          <div key={compAssignIndex}>\n            <div className=\"toDo-item\">\n              <div className=\"toDo-item-title\">\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    checked={true}\n                    onChange={() => {\n                      setSortedToDo((prevArr) => {\n                        // change assignment in unsorted arr to not visible\n                        if (arrayType == 1)\n                          setUnsortedToDo((prevArr) => {\n                            const newArr = [...prevArr];\n                            newArr[index][4] = 0;\n                            localStorage.setItem(\n                              \"unsortedToDo\",\n                              JSON.stringify(newArr)\n                            );\n                            return newArr;\n                          });\n                        else\n                          setAddedToDo((prevArr) => {\n                            const newArr = [...prevArr];\n                            newArr[index][4] = 0;\n                            localStorage.setItem(\n                              \"addedToDo\",\n                              JSON.stringify(newArr)\n                            );\n                            return newArr;\n                          });\n\n                        // change assignment in sorted arr to visible\n                        const newArr = [...prevArr];\n                        newArr[curAssignIndex][4] = 0;\n                        return newArr;\n                      });\n                      setCompletedAssignments((prevArr) => {\n                        const newArr = [...prevArr];\n                        newArr.splice(compAssignIndex, 1);\n                        localStorage.setItem(\n                          \"completedAssignments\",\n                          JSON.stringify(newArr)\n                        );\n                        return newArr;\n                      });\n                    }}\n                  />\n                  <span></span>\n                </label>\n                <div className=\"toDo-item-name\">\n                  {courseIndex && courses[courseIndex]\n                    ? `${\n                        courses[courseIndex].name\n                          .split(\"(\")\n                          .splice(-1, 1)[0]\n                          .split(\"_\")[0] +\n                        courses[courseIndex].name\n                          .split(\"(\")\n                          .splice(-1, 1)[0]\n                          .split(\"_\")[1]\n                      } - `\n                    : \"\"}\n                  {name}\n                </div>\n              </div>\n              <div className=\"toDo-item-dueDate\">{dueDate}</div>\n            </div>\n            {compAssignIndex !== compAssignIndex.length - 1 ? (\n              <hr className=\"horizontal-line\" />\n            ) : (\n              \"\"\n            )}\n          </div>\n        );\n      })\n    ) : (\n      <div></div>\n    );\n\n  /*\n  localStorage.removeItem(\"key\");\n  localStorage.removeItem(\"validKey\");\n    */\n  return (\n    <div className=\"container\">\n      {key == null ? (\n        <div className=\"login-container\">\n          <div className=\"login\">\n            <div className=\"login-header\">Canvas ToDo</div>\n            <input\n              id=\"login-input\"\n              type=\"text\"\n              placeholder=\"Enter API token\"\n              autoComplete=\"off\"\n            ></input>\n            <div id=\"login-alert\">Invalid token</div>\n            <button\n              className=\"login-button\"\n              onClick={() => {\n                const key = document.getElementById(\"login-input\").value;\n\n                // check the length of input is greater than 0\n                const check = fetch(\n                  `https://canvastodobackend.onrender.com/api/users/self/${key}`\n                ).then((response) => response.json());\n\n                check\n                  .then((result) => {\n                    if (key.length == 0 || result.errors) throw new Error();\n\n                    setValidKey(true);\n                    localStorage.setItem(\"validKey\", JSON.stringify(true));\n                    setKey(key);\n                    localStorage.setItem(\"key\", JSON.stringify(key));\n                  })\n                  .catch(() => {\n                    document\n                      .getElementById(\"login-alert\")\n                      .classList.add(\"show\");\n\n                    setTimeout(() => {\n                      document\n                        .getElementById(\"login-alert\")\n                        .classList.remove(\"show\");\n                    }, 2000);\n                  });\n              }}\n            >\n              Login\n            </button>\n            <div className=\"tutorial\">\n              <a\n                id=\"tutorial-text\"\n                href=\"https://kb.iu.edu/d/aaja\"\n                target=\"_blank\"\n              >\n                Request an API token\n              </a>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div id=\"courseModal\" className=\"modal\">\n            <div id=\"courseModal-content\" className=\"modal-content\">\n              <div className=\"modal-header\">\n                <div className=\"modal-title\">Removed Courses</div>\n                <span\n                  className=\"close\"\n                  onClick={() => {\n                    document.getElementById(\"courseModal\").style.display =\n                      \"none\";\n                    document.body.style.overflow = \"auto\";\n                  }}\n                >\n                  &times;\n                </span>\n              </div>\n              {addableCourses}\n            </div>\n          </div>\n          <div className=\"user\">\n            <div className=\"user-info\">\n              <div>{user.name}</div>\n              <div>ID: {user.id}</div>\n            </div>\n            <div className=\"dropdown-container\">\n              <img\n                className=\"user-img\"\n                src={\n                  user.avatar_url\n                    ? user.avatar_url\n                    : \"/default_profile_pic.jpeg\"\n                }\n                alt=\"User Avatar\"\n              />\n              <div className=\"dropdown-menu\">\n                <ul>\n                  <li\n                    onClick={() => {\n                      // reset key\n                      setKey(\"\");\n                      setValidKey(false);\n                      localStorage.removeItem(\"key\");\n                      localStorage.removeItem(\"validKey\");\n                      window.location.reload();\n                    }}\n                  >\n                    Logout\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"section\">\n            <div className=\"section-title\" style={{ margin: \"0px\" }}>\n              Courses\n            </div>\n            <div className=\"course-inputs\">\n              <button\n                className=\"button\"\n                onClick={() => {\n                  document.getElementById(\"courseModal\").style.display =\n                    \"block\";\n                  document.body.style.overflow = \"hidden\";\n                }}\n              >\n                Re-add Course\n              </button>\n              <div className=\"course-inputs-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={showCourseName}\n                  onChange={() => {\n                    setShowCourseName((prevShowCourseName) => {\n                      if (prevShowCourseName) {\n                        Array.from(\n                          document.getElementsByClassName(\"course-crn\")\n                        ).forEach((courseCRN) => {\n                          courseCRN.style.flex = \"0.6\";\n                          courseCRN.style.textAlign = \"start\";\n                        });\n\n                        Array.from(\n                          document.getElementsByClassName(\"course\")\n                        ).forEach((courseCRN) => {\n                          courseCRN.style.justifyContent = \"space-evenly\";\n                        });\n                      } else {\n                        Array.from(\n                          document.getElementsByClassName(\"course-crn\")\n                        ).forEach((courseCRN) => {\n                          courseCRN.style.flex = \"0.4\";\n                          courseCRN.style.textAlign = \"center\";\n                        });\n\n                        Array.from(\n                          document.getElementsByClassName(\"course\")\n                        ).forEach((courseCRN) => {\n                          courseCRN.style.justifyContent = \"space-between\";\n                        });\n                      }\n\n                      return !prevShowCourseName;\n                    });\n                  }}\n                ></input>\n                <div>Full Name</div>\n              </div>\n            </div>\n            <div className=\"course-container\">{courseTitles}</div>\n          </div>\n          <div className=\"section\">\n            <div className=\"toDo-title\">To-do</div>\n            <div className=\"toDo-add\">\n              <div className=\"toDo-add-container\">\n                <input\n                  id=\"toDo-add-inputTask\"\n                  placeholder=\"Enter task\"\n                  autoComplete=\"off\"\n                ></input>\n                <input\n                  id=\"toDo-add-inputDate\"\n                  type=\"date\"\n                  value={selectedDate}\n                  onChange={(event) => {\n                    setSelectedDate(event.target.value);\n                  }}\n                ></input>\n                <button\n                  className=\"toDo-add-btn\"\n                  onClick={() => {\n                    const inputElement =\n                      document.getElementById(\"toDo-add-inputTask\");\n                    const content = inputElement.value;\n\n                    setAddedToDo((prevArr) => {\n                      const arr = [...prevArr];\n\n                      const object = { name: content, due_at: selectedDate };\n                      arr.push([\n                        arr.length,\n                        object,\n                        \"userAdded\",\n                        \"userAdded\",\n                        0,\n                        2,\n                        0,\n                        { grade: \"userAdded\", workflow_state: \"userAdded\" },\n                      ]);\n\n                      // Update local storage\n                      localStorage.setItem(\"addedToDo\", JSON.stringify(arr));\n\n                      // Sort the new array\n                      const sortedArr = unsortedToDo.concat(arr);\n                      sortedArr.sort((a, b) => {\n                        const dateA = new Date(a[1].due_at).getTime();\n                        const dateB = new Date(b[1].due_at).getTime();\n                        return dateA - dateB;\n                      });\n\n                      // Update sorted array state\n                      setSortedToDo(sortedArr);\n\n                      return arr;\n                    });\n\n                    // clear the input field after updating the state\n                    inputElement.value = \"\";\n                  }}\n                >\n                  +\n                </button>\n              </div>\n              <select\n                className=\"toDo-select\"\n                value={toDoExtent}\n                onChange={(event) => {\n                  setToDoExtent(event.target.value);\n                  localStorage.setItem(\"toDoExtent\", event.target.value);\n                }}\n              >\n                <option value=\"7\">1 Week</option>\n                <option value=\"14\">2 Weeks</option>\n                <option value=\"30\">1 Month</option>\n                <option value=\"1000\">Show All</option>\n              </select>\n            </div>\n            {sortedToDo.length > 0 ? (\n              <div className=\"toDo-header\">Current</div>\n            ) : (\n              <div></div>\n            )}\n            {toDoCurrent}\n            {sortedToDo.length > 0 ? (\n              <div className=\"toDo-header second\">Completed</div>\n            ) : (\n              <div></div>\n            )}\n            {toDoCompleted}\n          </div>\n          <div className=\"section\">\n            <div className=\"section-title\">Modules</div>\n            {allModules}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Data;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","user","setUser","React","enrollment","setEnrollment","courses","setCourses","courseVisibility","setCourseVisibility","courseModules","setCourseModules","removedCourses","setRemovedCourses","prevArr","localStorage","getItem","JSON","parse","assignments","setAssignments","sortedToDo","setSortedToDo","unsortedToDo","setUnsortedToDo","addedToDo","setAddedToDo","completedAssignments","setCompletedAssignments","submissions","setSubmissions","items","setItems","itemVisibility","setItemVisibility","selectedDate","setSelectedDate","toDoExtent","setToDoExtent","prevExtent","setKey","validKey","setValidKey","showCourseName","setShowCourseName","getCourseGrade","courseId","i","length","course_id","grades","current_score","formatDate","date","dateObject","Date","day","getUTCDate","month","getUTCMonth","year","getUTCFullYear","formattedMonth","concat","getNumDays","dueDate","parts","split","formattedDate","today","setHours","diffDays","Math","round","toLocaleDateString","undefined","getDate","truncateString","str","maxLength","lastSpaceIndex","lastIndexOf","substring","fetch","then","response","json","userData","id","enrollmentData","coursesData","filter","course","name","splice","includes","push","modulesPromise","assignmentsPromise","Promise","all","modulesData","visibility","moduleItemsPromise","forEach","modules","courseIndex","Array","isArray","moduleVisibility","itemsPromises","map","moduleId","items_url","match","moduleItems","catch","error","console","log","assignmentsData","submissionsPromise","assignment","assignmentId","html_url","submissionsData","newArr","j","setItem","stringify","sortedArr","sort","b","due_at","getTime","populateSortedToDo","addableCourses","index","_jsxs","className","children","_jsx","style","textTransform","toLowerCase","onClick","courseTitles","courseName","courseCRN","item","border","borderRadius","margin","allModules","courseVisible","updatedVisibility","toggleCourseVisibility","props","moduleIndex","itemVisible","toggleItemVisibility","itemIndex","assignObj","assignmentsArray","title","getAssignment","daysUntil","itemTitle","submissionValid","width","textAlign","grade","parseFloat","toFixed","points_possible","workflow_state","toDoCurrent","element","curAssignIndex","assignIndex","visible","arrayType","progress","submission","removedCourseNames","type","onChange","pop","min","max","value","event","target","background","percentage","left","toDoCompleted","compAssignIndex","window","screen","checked","placeholder","autoComplete","document","getElementById","result","errors","Error","classList","add","setTimeout","remove","href","display","body","overflow","src","avatar_url","alt","removeItem","location","reload","prevShowCourseName","from","getElementsByClassName","flex","justifyContent","inputElement","content","arr","object","ReactDOM","render","App"],"sourceRoot":""}